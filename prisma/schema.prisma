// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  // provider = "mysql"
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl", "debian-openssl-1.1.x"]
}

model User {
  id       String @id @default(uuid())
  username String @unique
  password String

  userInfo       UserInfo?
  userBackground UserBackground?

  referalUser   User?   @relation("reference", fields: [referalId], references: [id]) // ใครแนะนำมา
  referalId     String? @unique
  referenceUser User[]  @relation("reference") // แนะนำใครบ้าง?

  role Role @default(BASIC)

  createdBlog Blog[] @relation("myBlog")

  favoriteBlog Blog[] @relation("favoriteBlog")
  token        Token?
}

model Blog {
  id       String   @id @default(uuid())
  title    String
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  author   User   @relation("myBlog", fields: [authorId], references: [id])
  authorId String

  favoriteUsers User[] @relation("favoriteBlog")
}

model UserInfo {
  id        String   @id @default(uuid())
  citizenId String   @unique
  firstname String
  lastname  String
  email     String   @unique
  createAt  DateTime @default(now())
  updateAt  DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
}

model UserBackground {
  id        String @id @default(uuid())
  education String @default("")
  location  String @default("")

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  skills SkillSet[]

  userExperiences UserExperience[]
}

model SkillSet {
  id   Int    @id @default(autoincrement())
  name String

  userBackground UserBackground[]
}

model UserExperience {
  id        String   @id @default(uuid())
  startDate DateTime
  endDate   DateTime
  company   String
  position  String

  userBackground   UserBackground @relation(fields: [userBackgroundId], references: [id])
  userBackgroundId String
}

enum Role {
  BASIC
  UPGRADED
  ADMIN
  SUPERUSER
}

model Token {
  id    Int    @id @default(autoincrement())
  token String

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
}
